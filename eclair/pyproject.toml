[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "eclair"
version = "0.0.1"
authors = [
    {name = "Joaquin Vanschoren, Omar Benjelloun, Jonathan Lebensold", email = "joaquin@mlcommons.org"},
]
description = "MCP server to help LLMs work with datasets, built on Croissant"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
keywords = [
    "mcp", 
    "model-context-protocol", 
    "datasets", 
    "croissant", 
    "ai", 
    "machine-learning",
    "data-science",
    "server"
]
dependencies = [
    "fastmcp>=0.2.0",
    "httpx>=0.27.0",
    "uvicorn>=0.30.0",
    "google-generativeai>=0.8.0",
    "mcp>=1.1.0",
    "python-dotenv>=1.0.0",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.19",
    "mkdocstrings>=0.30.0",
    "mkdocstrings-python>=1.18.2",
    "mlcroissant>=1.0.22",
    "func-timeout>=4.3.5",
    "google-genai>=1.36.0",
    "pytest>=8.4.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/eclairteam/eclair"
Documentation = "https://eclair.readthedocs.io/"
Repository = "https://github.com/eclairteam/eclair.git"
"Bug Reports" = "https://github.com/eclairteam/eclair/issues"

[project.scripts]
eclair-server = "eclair.server.cli:main"
eclair-client = "eclair.client.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
eclair = ["py.typed", "*.json", "templates/*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["eclair"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
asyncio_mode = "auto"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "asyncio: marks tests as async, to be run by the pytest-asyncio plugin."
]

[tool.coverage.run]
source = ["src/eclair"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mcp.*",
    "fastmcp.*",
    "uvicorn.*",
]
ignore_missing_imports = true
